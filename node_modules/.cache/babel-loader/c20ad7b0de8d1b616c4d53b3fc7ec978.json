{"ast":null,"code":"var _jsxFileName = \"/Users/jin/Documents/dataadroit/src/UploadCSV.js\";\nimport React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport ReactFileReader from \"react-file-reader\";\nimport { BrowserRouter, Redirect, withRouter } from \"react-router-dom\";\nimport { CSVReader } from \"react-papaparse\";\n\nclass UploadCSV extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleReadCSV = data => {\n      console.log(data);\n    };\n\n    this.handleOnError = (err, file, inputElem, reason) => {\n      console.log(err);\n    };\n\n    this.handleImportOffer = () => {\n      this.fileInput.current.click();\n    };\n\n    this.handleFiles = files => {\n      var reader = new FileReader();\n\n      reader.onload = function (e) {\n        // Use reader.result\n        alert(reader.result);\n      };\n\n      const router = this.context.router;\n      this.props.history.push(\"/charts\");\n      const a = reader.readAsText(files[0]);\n    };\n\n    this.fileInput = React.createRef();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(CSVReader, {\n      onFileLoaded: this.handleReadCSV,\n      inputRef: this.fileInput,\n      style: {\n        display: \"none\"\n      },\n      onError: this.handleOnError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleImportOffer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Import\"));\n  }\n\n}\n\nexport default withRouter(UploadCSV);","map":{"version":3,"sources":["/Users/jin/Documents/dataadroit/src/UploadCSV.js"],"names":["React","Component","d3","ReactFileReader","BrowserRouter","Redirect","withRouter","CSVReader","UploadCSV","constructor","props","handleReadCSV","data","console","log","handleOnError","err","file","inputElem","reason","handleImportOffer","fileInput","current","click","handleFiles","files","reader","FileReader","onload","e","alert","result","router","context","history","push","a","readAsText","createRef","render","display"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,aAAT,EAAwBC,QAAxB,EAAkCC,UAAlC,QAAoD,kBAApD;AACA,SAASC,SAAT,QAA0B,iBAA1B;;AAEA,MAAMC,SAAN,SAAwBR,KAAK,CAACC,SAA9B,CAAwC;AACtCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAKnBC,aALmB,GAKHC,IAAI,IAAI;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,KAPkB;;AAAA,SASnBG,aATmB,GASH,CAACC,GAAD,EAAMC,IAAN,EAAYC,SAAZ,EAAuBC,MAAvB,KAAkC;AAChDN,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,KAXkB;;AAAA,SAanBI,iBAbmB,GAaC,MAAM;AACxB,WAAKC,SAAL,CAAeC,OAAf,CAAuBC,KAAvB;AACD,KAfkB;;AAAA,SAiBnBC,WAjBmB,GAiBLC,KAAK,IAAI;AACrB,UAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AACAD,MAAAA,MAAM,CAACE,MAAP,GAAgB,UAASC,CAAT,EAAY;AAC1B;AACAC,QAAAA,KAAK,CAACJ,MAAM,CAACK,MAAR,CAAL;AACD,OAHD;;AAFqB,YAMbC,MANa,GAMF,KAAKC,OANH,CAMbD,MANa;AAOrB,WAAKtB,KAAL,CAAWwB,OAAX,CAAmBC,IAAnB,CAAwB,SAAxB;AACA,YAAMC,CAAC,GAAGV,MAAM,CAACW,UAAP,CAAkBZ,KAAK,CAAC,CAAD,CAAvB,CAAV;AACD,KA1BkB;;AAEjB,SAAKJ,SAAL,GAAiBrB,KAAK,CAACsC,SAAN,EAAjB;AACD;;AAwBDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,YAAY,EAAE,KAAK5B,aADrB;AAEE,MAAA,QAAQ,EAAE,KAAKU,SAFjB;AAGE,MAAA,KAAK,EAAE;AAAEmB,QAAAA,OAAO,EAAE;AAAX,OAHT;AAIE,MAAA,OAAO,EAAE,KAAKzB,aAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOE;AAAQ,MAAA,OAAO,EAAE,KAAKK,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,CADF;AAWD;;AAxCqC;;AA2CxC,eAAed,UAAU,CAACE,SAAD,CAAzB","sourcesContent":["import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport ReactFileReader from \"react-file-reader\";\nimport { BrowserRouter, Redirect, withRouter } from \"react-router-dom\";\nimport { CSVReader } from \"react-papaparse\";\n\nclass UploadCSV extends React.Component {\n  constructor(props) {\n    super(props);\n    this.fileInput = React.createRef();\n  }\n\n  handleReadCSV = data => {\n    console.log(data);\n  };\n\n  handleOnError = (err, file, inputElem, reason) => {\n    console.log(err);\n  };\n\n  handleImportOffer = () => {\n    this.fileInput.current.click();\n  };\n\n  handleFiles = files => {\n    var reader = new FileReader();\n    reader.onload = function(e) {\n      // Use reader.result\n      alert(reader.result);\n    };\n    const { router } = this.context;\n    this.props.history.push(\"/charts\");\n    const a = reader.readAsText(files[0]);\n  };\n  render() {\n    return (\n      <div>\n        <CSVReader\n          onFileLoaded={this.handleReadCSV}\n          inputRef={this.fileInput}\n          style={{ display: \"none\" }}\n          onError={this.handleOnError}\n        />\n        <button onClick={this.handleImportOffer}>Import</button>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(UploadCSV);\n"]},"metadata":{},"sourceType":"module"}