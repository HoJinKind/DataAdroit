{"ast":null,"code":"var _jsxFileName = \"/Users/jin/Documents/dataadroit/src/UploadCSV.js\";\nimport React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport ReactFileReader from \"react-file-reader\";\nimport { BrowserRouter, Redirect, withRouter } from \"react-router-dom\";\n\nclass UploadCSV extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      toDashboard: false\n    };\n\n    this.handleToDashBoard = () => {\n      const toDashboard = this.state.toDashboard;\n      this.setState({\n        toDashboard: !toDashboard\n      });\n    };\n\n    this.handleFiles = files => {\n      const toDashboard = this.state.toDashboard;\n      var reader = new FileReader();\n\n      reader.onload = function (e) {\n        // Use reader.result\n        alert(reader.result);\n      };\n\n      const router = this.context.router;\n      this.props.history.push({\n        pathname: \"/charts\",\n        state: {\n          detail: \"test\"\n        }\n      });\n      reader.readAsText(files[0]);\n    };\n  }\n\n  render() {\n    return React.createElement(ReactFileReader, {\n      handleFiles: this.handleFiles,\n      fileTypes: \".csv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Upload \"));\n  }\n\n}\n\nexport default withRouter(UploadCSV);","map":{"version":3,"sources":["/Users/jin/Documents/dataadroit/src/UploadCSV.js"],"names":["React","Component","d3","ReactFileReader","BrowserRouter","Redirect","withRouter","UploadCSV","state","toDashboard","handleToDashBoard","setState","handleFiles","files","reader","FileReader","onload","e","alert","result","router","context","props","history","push","pathname","detail","readAsText","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,aAAT,EAAwBC,QAAxB,EAAkCC,UAAlC,QAAoD,kBAApD;;AAEA,MAAMC,SAAN,SAAwBP,KAAK,CAACC,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACtCO,KADsC,GAC9B;AACNC,MAAAA,WAAW,EAAE;AADP,KAD8B;;AAAA,SAKtCC,iBALsC,GAKlB,MAAM;AAAA,YAChBD,WADgB,GACA,KAAKD,KADL,CAChBC,WADgB;AAExB,WAAKE,QAAL,CAAc;AACZF,QAAAA,WAAW,EAAE,CAACA;AADF,OAAd;AAGD,KAVqC;;AAAA,SAYtCG,WAZsC,GAYxBC,KAAK,IAAI;AAAA,YACbJ,WADa,GACG,KAAKD,KADR,CACbC,WADa;AAErB,UAAIK,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AACAD,MAAAA,MAAM,CAACE,MAAP,GAAgB,UAASC,CAAT,EAAY;AAC1B;AACAC,QAAAA,KAAK,CAACJ,MAAM,CAACK,MAAR,CAAL;AACD,OAHD;;AAHqB,YAQbC,MARa,GAQF,KAAKC,OARH,CAQbD,MARa;AASrB,WAAKE,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB;AAAEC,QAAAA,QAAQ,EAAE,SAAZ;AAAuBjB,QAAAA,KAAK,EAAE;AAAEkB,UAAAA,MAAM,EAAE;AAAV;AAA9B,OAAxB;AACAZ,MAAAA,MAAM,CAACa,UAAP,CAAkBd,KAAK,CAAC,CAAD,CAAvB;AACD,KAvBqC;AAAA;;AAwBtCe,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,eAAD;AAAiB,MAAA,WAAW,EAAE,KAAKhB,WAAnC;AAAgD,MAAA,SAAS,EAAE,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF;AAKD;;AA9BqC;;AAiCxC,eAAeN,UAAU,CAACC,SAAD,CAAzB","sourcesContent":["import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport ReactFileReader from \"react-file-reader\";\nimport { BrowserRouter, Redirect, withRouter } from \"react-router-dom\";\n\nclass UploadCSV extends React.Component {\n  state = {\n    toDashboard: false\n  };\n\n  handleToDashBoard = () => {\n    const { toDashboard } = this.state;\n    this.setState({\n      toDashboard: !toDashboard\n    });\n  };\n\n  handleFiles = files => {\n    const { toDashboard } = this.state;\n    var reader = new FileReader();\n    reader.onload = function(e) {\n      // Use reader.result\n      alert(reader.result);\n    };\n\n    const { router } = this.context;\n    this.props.history.push({ pathname: \"/charts\", state: { detail: \"test\" } });\n    reader.readAsText(files[0]);\n  };\n  render() {\n    return (\n      <ReactFileReader handleFiles={this.handleFiles} fileTypes={\".csv\"}>\n        <button className='btn'>Upload </button>\n      </ReactFileReader>\n    );\n  }\n}\n\nexport default withRouter(UploadCSV);\n"]},"metadata":{},"sourceType":"module"}